#!/bin/bash
set -e
if [ $# -eq 0 ]; then
    echo "fmriprep_wrapper loads the proper python virtual environment and executes fmriprep. It expects a full call to fmriprep."
    echo "Example: fmriprep_wrapper --n_cpus 8 --verbose --output-space template --write-graph --participant_label 040 --use-aroma -w work bids output participant"
    exit 1
fi

LANG=en_US.UTF-8
export LANG

#setup compute environment
script_dir=$( dirname "$0" )
source "${script_dir}/pipeline_functions"

#in principle, we could pass all environment variables in with -v
[ -z "$env_file" ] && env_file="${script_dir}/compute_environment.cfg" #set default
[ ! -r "$env_file" ]  && echo "Cannot access compute config file ${env_file}" && exit 1
source "$env_file" #setup relevant variables for this processing environment

command -v deactivate >/dev/null 2>&1 && deactivate #exit existing virtual environment if active
command -v module >/dev/null 2>&1 && module unload python #make sure no system python modules are loaded    

[ -n "$torque_modules_root" ] && module use "$torque_modules_root"
[ -n "$afni_module" ] && module load "$afni_module"
[ -n "$fsl_module"] && module load "$fsl_module"
[ -n "$ants_module" ] && module load "$ants_module"
[ -n "$freesurfer_module" ] && module load "$freesurfer_module"

#set freesurfer subjects dir to desired location
source $FREESURFER_HOME/SetUpFreeSurfer.sh
export SUBJECTS_DIR="$G/freesurfer_subjects"

#source ${G}/lab_resources/ni_path.bash

#activate fmriprep python environment
source "${fmriprep_virtualenv}/bin/activate"

"${fmriprep_virtualenv}/bin/fmriprep" "$@" #pass all arguments forward
