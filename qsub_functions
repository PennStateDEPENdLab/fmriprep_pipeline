#!/bin/bash

#Helper function that converts a set of environment variables into a comma-separated key-value list of
#variables and values. This is used to pass environment variables to qsub -v without having to type out a lot of details
#  Example: envpass qsub_allocation heudiconv_walltime
#  Result:  This will lookup the values of these variables in the environment
#           and result in something like fsl_module=mnh5174_c_g_sc_default,heudiconv_walltime=2:00:00 
#  Consider whether we should be quoting the values in case they have weird characters
function envpass() {
    npar=$#
    [ $npar -eq 0 ] && return #nothing to do
    env_names=$@
    local vpass_string=
    for inputName in $env_names; do
	#check whether value contains an equals sign, in which case treat it as a verbatim key-value pair
	if [[ "$inputName" == *"="* ]]; then
	    vpass_string="$vpass_string'$inputName',"
	else     
	    inputVal=${!inputName}
	    [ -z "${inputVal}" ] && echo "$inputName is empty" # && exit 1
	    vpass_string="$vpass_string$inputName='$inputVal',"
	fi
    done
    vpass_string=$( echo $vpass_string | sed 's/.$//' ) #trim trailing comma
    echo $vpass_string
}



#looks for qsub_email and qsub_allocation in environment
#accepts positional parameters thereafter that all get converted to -l arguments
function build_qsub_string() {
    local qsub_string=
    if [ -n "$qsub_allocation" ]; then
	qsub_string="${qsub_string} -A $qsub_allocation"
    else
	qsub_string="${qsub_string} -A open" #default to open queue if not specified
    fi
    
    if [ -n "$qsub_email" ]; then qsub_string="${qsub_string} -M $qsub_email"; fi

    local nargs=$#
    if [ $nargs -gt 0 ]; then
	local env_names=$@
	for inputName in $env_names; do
	    #check whether value contains an equals sign, in which case treat it as a verbatim key-value pair
	    if [[ "$inputName" == *"="* ]]; then
		qsub_string="$qsub_string -l '$inputName'"
	    else
		inputVal=${!inputName} #use the value of the environment variable
		if [ -n "${inputVal}" ]; then
		    qsub_string="$qsub_string -l $inputName='$inputVal'"
		fi
	    fi
	done
    fi
    echo $qsub_string
}
